from enum import Enum


class Die:
    """
    A single die
    """

    class Sides(Enum):
        """
        The number of sides a die has
        """

        FOUR = 0
        SIX = 1
        EIGHT = 2
        TEN = 3
        TWELVE = 4
        TWENTY = 5

    _sides_dict = {
        Sides.FOUR: 4,
        Sides.SIX: 6,
        Sides.EIGHT: 8,
        Sides.TEN: 10,
        Sides.TWELVE: 12,
        Sides.TWENTY: 20
    }

    def __init__(self, sides: Sides):
        """
        Initializes the class

        :param sides: The number of sides the die has
        """

        self._sides = sides

    @property
    def name(self) -> str:
        """
        :return: The name of the die (of the form: "1d<sides>")
        """

        return "1d" + str(self._sides_dict[self._sides])

    @property
    def min_possible_score(self):
        """
        :return: The minimum possible score that can be generated by this die
        """

        return 1

    @property
    def max_possible_score(self):
        """
        :return: The maximum possible score that can be generated by this die
        """

        return self._sides_dict[self._sides]
