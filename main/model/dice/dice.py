from enum import Enum

from main.model.dice.die import Die
from main.model.int_types.posint import Posint


class Dice(Die):
    """
    A set of dice, all of which have the same number of sides
    """

    def __init__(self, num: Posint, sides: Die.Sides):
        """
        Initializes the class

        :param num: The number of dice in the set
        :param sides: The number of sides each die has
        """

        self._num = num
        super().__init__(sides)

    @property
    def name(self) -> str:
        """
        :return: The name of the dice set (of the form: "<num>d<sides>")
        """

        return str(self._num.value) + super().name[1:]

    @property
    def min_possible_score(self):
        """
        :return: The minimum possible score that can be generated by this dice set
        """

        return self._num.value

    @property
    def max_possible_score(self):
        """
        :return: The maximum possible score that can be generated by this dice set
        """

        return self._num.value * super().max_possible_score
